/*
 * Api documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package getfood.io.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * User
 */

public class User {

  @SerializedName("_id")
  private String _id = null;

  @SerializedName("initials")
  private String initials = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("token")
  private String token = null;
  public User _id(String _id) {
    this._id = _id;
    return this;
  }



  /**
   * Get _id
   * @return _id
   **/
  @Schema(description = "")
  public String getId() {
    return _id;
  }
  public void setId(String _id) {
    this._id = _id;
  }
  public User initials(String initials) {
    this.initials = initials;
    return this;
  }



  /**
   * Get initials
   * @return initials
   **/
  @Schema(example = "JD", description = "")
  public String getInitials() {
    return initials;
  }
  public void setInitials(String initials) {
    this.initials = initials;
  }
  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }



  /**
   * Get firstName
   * @return firstName
   **/
  @Schema(example = "John", required = true, description = "")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }
  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }



  /**
   * Get lastName
   * @return lastName
   **/
  @Schema(example = "Doe", required = true, description = "")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }
  public User password(String password) {
    this.password = password;
    return this;
  }



  /**
   * Get password
   * @return password
   **/
  @Schema(example = "Test123!", required = true, description = "")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }
  public User email(String email) {
    this.email = email;
    return this;
  }



  /**
   * Get email
   * @return email
   **/
  @Schema(example = "john.doe@example.com", required = true, description = "")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public User token(String token) {
    this.token = token;
    return this;
  }



  /**
   * Get token
   * @return token
   **/
  @Schema(description = "")
  public String getToken() {
    return token;
  }
  public void setToken(String token) {
    this.token = token;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this._id, user._id) &&
            Objects.equals(this.initials, user.initials) &&
            Objects.equals(this.firstName, user.firstName) &&
            Objects.equals(this.lastName, user.lastName) &&
            Objects.equals(this.password, user.password) &&
            Objects.equals(this.email, user.email) &&
            Objects.equals(this.token, user.token);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(_id, initials, firstName, lastName, password, email, token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");

    sb.append("    _id: ").append(toIndentedString(_id)).append("\n");
    sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
